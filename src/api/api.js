import axios from "axios";

const API_URL_USER = import.meta.env.VITE_API_USER_URL;
const API_PRODUCT_URL = import.meta.env.VITE_API_PRODUCT_URL;
const API_REVIEW_URL = import.meta.env.VITE_API_REVIEW_URL;

const api = axios.create({
  baseURL: API_PRODUCT_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

// üü¢ L·∫•y danh s√°ch s·∫£n ph·∫©m
export const getProducts = async () => {
  try {
    const response = await api.get("/products");
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:", error);
    return [];
  }
};

// üü¢ L·∫•y th√¥ng tin s·∫£n ph·∫©m theo ID
export const getProductById = async (id) => {
  try {
    const response = await api.get(`/products/${id}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y th√¥ng tin s·∫£n ph·∫©m:", error);
    return null;
  }
};

const api_user = axios.create({
  baseURL: API_PRODUCT_URL,
  headers: {
    "Content-Type": "application/json",
  },
});
// H√†m l·∫•y th√¥ng tin s·∫£n ph·∫©m c·ª• th·ªÉ theo id
export const getUserById = async (userID) => {
  try {
    const response = await api_user.get(`/users/${userID}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", error);
    return null;
  }
};

const productAPI = axios.create({
  baseURL: API_PRODUCT_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

const userAPI = axios.create({
  baseURL: API_URL_USER,
  headers: {
    "Content-Type": "application/json",
  },
});

const reviewAPI = axios.create({
  baseURL: API_REVIEW_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

// üü¢ L·∫•y danh s√°ch s·∫£n ph·∫©m theo kh√≥a
export const getListProducts = async (key) => {
  try {
    const response = await productAPI.get(`/${key}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:", error);
    return [];
  }
};
export const getCategories = async () => {
  try {
    const response = await api.get("/categories");
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch danh m·ª•c:", error);
    return [];
  }
};

export const getListUsers = async (key) => {
  try {
    const response = await userAPI.get(`/${key}`);
    console.log("Full response:", response); // Xem to√†n b·ªô response
    console.log("User API Base URL:", API_URL_USER);

    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", error);
    return [];
  }
};

// üü¢ L·∫•y th√¥ng tin s·∫£n ph·∫©m chi ti·∫øt theo ID
export const getProductDetail = async (id) => {
  try {
    const response = await productAPI.get(`products/${id}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", error);
    return null;
  }
};

// üü¢ L·∫•y th√¥ng tin ng∆∞·ªùi d√πng theo ID

export const getUserInfo = async (userID) => {
  try {
    const response = await userAPI.get(`user/${userID}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", error);
    return null;
  }
};

// üü¢ C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
export const updateUserInfo = async (userID, token, updatedData) => {
  try {
    const response = await userAPI.put(`user/${userID}`, updatedData, {
      headers: {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
      },
    });
    return response.data;
  } catch (error) {
    console.error("L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng:", error);
    return null;
  }
};

// üü¢ Th√™m m·ªõi s·∫£n ph·∫©m
export const insertProduct = async (data) => {
  try {
    const response = await productAPI.post("/products", data);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi th√™m s·∫£n ph·∫©m:", error);
    return null;
  }
};

export const insertStockEntry = async (data) => {
  try {
    if (!data.productID || data.entryPrice <= 0 || data.entryQuantity <= 0) {
      throw new Error("D·ªØ li·ªáu nh·∫≠p kho kh√¥ng h·ª£p l·ªá!");
    }

    const response = await productAPI.post(
      "/stock-entries",
      {
        productID: data.productID,
        entryPrice: data.entryPrice,
        entryQuantity: data.entryQuantity,
      },
      { headers: { "Content-Type": "application/json" } }
    );

    if (!response.data) {
      throw new Error("Ph·∫£n h·ªìi t·ª´ server kh√¥ng h·ª£p l·ªá!");
    }

    console.log("Stock entry response:", response.data);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi th√™m phi·∫øu nh·∫≠p kho:", error.message);
    return null;
  }
};

// üü¢ C·∫≠p nh·∫≠t s·∫£n ph·∫©m theo ID
export const updateProduct = async (id, data) => {
  try {
    if (data.productID) {
      throw new Error("Kh√¥ng th·ªÉ ch·ªânh s·ª≠a m√£ s·∫£n ph·∫©m!");
    }

    const formattedData = {
      name: decodeURIComponent(data.name),
      description: decodeURIComponent(data.description),
      origin: decodeURIComponent(data.origin),
      imageUrl: data.imageUrl,
      import: data.import,
      category: data.category,
      unit: data.unit,
      status: data.status,
    };

    const response = await productAPI.put(`/products/${id}`, formattedData, {
      headers: { "Content-Type": "application/json" },
    });
    return response.data;
  } catch (error) {
    console.error("L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m:", error);
    return null;
  }
};

// üü¢ L·∫•y t·∫•t c·∫£ ƒë√°nh gi√° s·∫£n ph·∫©m
export const getAllReviews = async () => {
  try {
    const response = await reviewAPI.get("/reviews");
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch ƒë√°nh gi√°:", error);
    return [];
  }
};

// üü¢ Th√™m danh m·ª•c m·ªõi
export const insertCategory = async (data) => {
  try {
    const response = await api.post("/categories", data);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi th√™m danh m·ª•c:", error);
    return null;
  }
};
// üü¢ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
export const getAllProducts = async () => {
  try {
    const response = await api.get("/products");
    console.log("API response:", response.data); // In ra d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m:", error);
    return [];
  }
};
// üü¢ L·∫•y danh s√°ch danh m·ª•c t·ª´ s·∫£n ph·∫©m
export const getCategoriesFromProducts = async () => {
  try {
    const products = await getAllProducts();
    const categories = [...new Set(products.map(product => product.category))];
    return categories;
  } catch (error) {
    console.error("L·ªói khi l·∫•y danh s√°ch danh m·ª•c t·ª´ s·∫£n ph·∫©m:", error);
    return [];
  }
};

// üü¢ L·∫•y th√¥ng tin nh·∫≠p h√†ng
export const getStockEntry = async (id) => {
  try {
    const response = await productAPI.get(`/stock-entries/${id}`);
    return response.data;
  } catch (error) {
    console.error("L·ªói khi l·∫•y th√¥ng tin nh·∫≠p h√†ng:", error);
    return null;
  }
};

export default api;
